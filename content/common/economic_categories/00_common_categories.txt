buffer = {
	hidden = yes
	use_for_ai_budget = yes
}

country = {
	hidden = yes
	generate_mult_modifiers = {
		produces
	}

	generate_add_modifiers = {
		produces
	}
}

# Base income of country
country_base = {
	parent = country
	generate_add_modifiers = {
		produces
	}
    generate_mult_modifiers = {
		produces
	}
}

trade = {
}

trade_routes = {
	parent = trade
}

resolutions = {
	parent = country
	use_for_ai_budget = yes
}

edicts = {
	use_for_ai_budget = yes
	parent = country
	generate_mult_modifiers = {
		cost
	}
}

rare_edicts = {
	use_for_ai_budget = yes
	parent = edicts

	generate_mult_modifiers = {
		cost
	}
}

ship_edicts = {
	parent = rare_edicts
	use_for_ai_budget = yes
}

campaigns = {
	use_for_ai_budget = yes
	parent = edicts
	generate_mult_modifiers = {
		cost
	}
}

decisions = {
	use_for_ai_budget = yes
	parent = country
    generate_mult_modifiers = {
		cost
	}
}

megastructures = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	parent = country
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	
	triggered_produces_modifier = {
		key = rsrchcap_science_nexus_1
		modifier_types = {
			add
		}
		trigger = {
			is_megastructure_type = think_tank_1
		}
	}
	triggered_produces_modifier = {
		key = rsrchcap_science_nexus_2
		modifier_types = {
			add
		}
		trigger = {
			is_megastructure_type = think_tank_2
		}
	}
	triggered_produces_modifier = {
		key = rsrchcap_science_nexus_3
		modifier_types = {
			add
		}
		trigger = {
			OR = {
				is_megastructure_type = think_tank_3
				is_megastructure_type = think_tank_restored
			}
		}
	}
	triggered_produces_modifier = {
		key = rsrchcap_science_nexus_4
		modifier_types = {
			add
		}
		trigger = {
			is_megastructure_type = think_tank_4
		}
	}
}

colonies = {
	parent = country
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_colonizer
		}
	}
	
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

ships = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		upkeep
		cost
	}
	
	generate_add_modifiers = {
		upkeep
		cost
	}

	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country

	triggered_cost_modifier = {
		key = starbase_shipyard_build
		use_parent_icon = yes

		modifier_types = {
			mult
			add
		}
	}

	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = colonizer
		}
	}
	
	triggered_upkeep_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = colonizer
		}
	}

	triggered_cost_modifier = {
		key = ship_corvette
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = corvette
		}
	}
	
	triggered_upkeep_modifier = {
		key = ship_corvette
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = corvette
		}
	}

	triggered_cost_modifier = {
		key = ship_destroyer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = destroyer
		}
	}
	triggered_upkeep_modifier = {
		key = ship_destroyer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = destroyer
		}
	}

	triggered_cost_modifier = {
		key = ship_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = cruiser
		}
	}
	triggered_upkeep_modifier = {
		key = ship_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = cruiser
		}
	}

	triggered_cost_modifier = {
		key = ship_battleship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = battleship
		}
	}
	
	triggered_cost_modifier = {
		key = ship_titan
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = titan
		}
	}

	##colossus	
	triggered_cost_modifier = {
		key = ship_colossus
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = colossus
		}
	}
	triggered_upkeep_modifier = {
		key = ship_colossus
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = colossus
		}
	}

	##juggernaut	
	triggered_cost_modifier = {
		key = ship_juggernaut
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = juggernaut
		}
	}
	triggered_upkeep_modifier = {
		key = ship_juggernaut
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = juggernaut
		}
	}

	triggered_cost_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_small
		}
	}

	triggered_cost_modifier = {
		key = ship_science
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = science
		}
	}
	triggered_upkeep_modifier = {
		key = ship_science
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_science_ship
		}
	}
	
	triggered_cost_modifier = {
		key = ship_constructor
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = constructor
		}
	}
	triggered_upkeep_modifier = {
		key = ship_constructor
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_constructor
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_outpost
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_outpost
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_outpost
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_outpost
		}
	}
	triggered_cost_modifier = {
		key = starbase_starport
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starport
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starport
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starport
		}
	}
	triggered_cost_modifier = {
		key = starbase_starhold
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starhold
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starhold
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starhold
		}
	}
	triggered_cost_modifier = {
		key = starbase_starfortress
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starfortress
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starfortress
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starfortress
		}
	}
	triggered_cost_modifier = {
		key = starbase_citadel
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_citadel
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_citadel
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_citadel
		}
	}
	
	triggered_cost_modifier = {
		key = ship_StrikeCruiser
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = StrikeCruiser
		}
	}	
	
	triggered_cost_modifier = {
		key = ship_Battlecruiser
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = Battlecruiser
		}
	}

	triggered_cost_modifier = {
		key = ship_Carrier
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = Carrier
		}
	}
	
	triggered_cost_modifier = {
		key = ship_Dreadnought
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = Dreadnought
		}
	}
	
	triggered_cost_modifier = {
		key = ship_Flagship
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = Flagship
		}
	}
	
	triggered_cost_modifier = {
		key = ship_supportship
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = supportship
		}
	}
	
	triggered_cost_modifier = {
		key = ship_military_station_medium
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_medium
		}
	}
	
	triggered_cost_modifier = {
		key = ship_military_station_large
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_large
		}
	}
	
	triggered_cost_modifier = {
		key = ship_xl_cannon
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = xl_cannon
		}
	}

	triggered_cost_modifier = {
		key = ship_ion_cannon
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = ion_cannon
		}
	}
}

ship_components = {
	parent = ships
	
	generate_mult_modifiers = {
		cost
	}
	
	generate_add_modifiers = {
		cost
	}
}

ship_sections = {
	parent = ships
	
	generate_mult_modifiers = {
		upkeep
		cost
	}
	
	generate_add_modifiers = {
		upkeep
		cost
	}
	
		##defense platforms	 bad	
	triggered_cost_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_small
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_small
		}
	}
	
	triggered_cost_modifier = {
		key = ship_military_station_medium
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_medium
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military_station_medium
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_medium
		}
	}
	
	triggered_cost_modifier = {
		key = ship_military_station_large
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_large
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military_station_large
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = military_station_large
		}
	}
	##end platforms  bad	
}

ship_upgrades = {
	parent = ships
	use_for_ai_budget = yes
	
	generate_mult_modifiers = {
		upkeep
		cost
	}
	generate_add_modifiers = {
		upkeep
		cost
	}
}


stations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}

	parent = country
}

station_gatherers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

station_researchers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

station_observers = {
	parent = stations
	
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

station_observer_missions = {
	parent = station_observers
	
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

starbases = {
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		upkeep
		cost
	}
	generate_add_modifiers = {
		upkeep
		cost
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}

starbase_stations = {
	parent = starbases

	triggered_cost_modifier = {
		key = starbase_outpost
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_outpost
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_outpost
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_outpost
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_starport
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starport
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starport
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starport
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_starhold
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starhold
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starhold
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starhold
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_starfortress
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starfortress
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starfortress
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starfortress
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_citadel
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_citadel
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_citadel
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_citadel
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_ion_cannon
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = ion_cannon
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_ion_cannon
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = ion_cannon
		}
	}
}

starbase_buildings = {
	parent = starbases

	generate_mult_modifiers = {
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		cost
		upkeep
	}
}

starbase_modules = {
	parent = starbases

	generate_mult_modifiers = {
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planets = {
	parent = country
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	
	generate_mult_modifiers = {
		produces
	}
	
	generate_add_modifiers = {
		produces
	}

	# hidden = yes
}

planet_structures = {
	parent = planets
	#hidden = yes
	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planet_buildings = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planet_buildings_strongholds = {
	parent = planet_buildings

	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planet_branch_offices = {
	parent = planets

	generate_mult_modifiers = {
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_branch_office_buildings = {
	parent = planets

	generate_mult_modifiers = {
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planet_districts = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planet_districts_cities = {
	parent = planet_districts

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	generate_mult_modifiers = {
		cost
		upkeep
	}
}

planet_districts_farming = {
	parent = planet_structures
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		cost
	}
}

planet_districts_hab_energy = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
	
}

planet_districts_hab_research = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
	
}

planet_districts_hab_mining = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planet_districts_hab_trade = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
	}
}

planet_districts_hab_leisure = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
	}
}
planet_jobs = {
	parent = planets

	generate_mult_modifiers = {
		produces
		upkeep
	}

    generate_add_modifiers = {
		produces
		upkeep
	}

	triggered_produces_modifier = {
		key = planet_jobs_slave
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = slave
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_worker
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_pop_category = worker
				is_pop_category = slave # Yes, slave should count towards both worker and slave
				is_pop_category = simple_drone
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_specialist
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = specialist
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_specialist
		modifier_types = {
			mult
		}
		trigger = {
			is_pop_category = specialist
		}
	}

    triggered_produces_modifier = {
		key = planet_jobs_ruler
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = ruler
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_simple_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = simple_drone
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_complex_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = complex_drone
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_robotic
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = yes
		}
	}
}

planet_larva_queens = {
	icon = "job_larva_queen"
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_bio_trophies = {
	parent = planet_jobs
    generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_pop_assemblers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        	upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_farmers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = mod_farmer
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job = farmer
				has_job = agri_drone
			}
		}
	}
}

planet_miners = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = mod_miner
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job = miner
				has_job = mining_drone
			}
		}
	}
	
	triggered_produces_modifier = {
		key = mod_crystal_miner
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job = crystal_miner
				has_job = crystal_mining_drone
			}
		}
	}
}

planet_clerk = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_livestock = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
       		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_technician = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = mod_technician
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				has_job = technician
				has_job = technician_drone
			}
		}
	}
}

planet_executives = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_managers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = rsrchcap_manager
		modifier_types = {
			add
		}
		trigger = {
			has_job = manager
		}
	}
}

planet_administrators = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_bureaucrats = {
	icon = "job_bureaucrat"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = mod_paperworks
		modifier_types = {
			add
		}
		trigger = {
			has_job = bureaucrat
		}
	}
	
	triggered_produces_modifier = {
		key = mod_coordinator
		modifier_types = {
			add
		}
		trigger = {
			has_job = coordinator
		}
	}
}

planet_researchers = {
	icon = "job_researcher"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = rsrchcap_head_researcher
		modifier_types = {
			add
		}
		trigger = {
			has_job = head_researcher
		}
	}

	triggered_produces_modifier = {
		key = rsrchcap_researcher
		modifier_types = {
			add
		}
		trigger = {
			OR = {
				has_job = researcher
				has_job = brain_drone
				has_job = calculator
				has_job = techno_priest
			}
		}
	}

	triggered_produces_modifier = {
		key = rsrchcap_dimensional_portal_researcher
		modifier_types = {
			add
		}
		trigger = {
			OR = {
				has_job = dimensional_portal_researcher
				has_job = dimensional_portal_researcher_gestalt
			}
		}
	}

	triggered_produces_modifier = {
		key = rsrchcap_dimensional_portal_researcher_closed
		modifier_types = {
			add
		}
		trigger = {
			OR = {
				has_job = dimensional_portal_researcher
				has_job = dimensional_portal_researcher_gestalt
			}
			exists = planet
			planet = { has_planet_flag = dportal_closed }
		}
	}
}

planet_metallurgists = {
	icon = "job_foundry"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = mod_foundry
		modifier_types = {
			add
		}
		trigger = {
			OR = {
				has_job = foundry
				has_job = alloy_drone
				has_job = fabricator
			}
		}
	}
}

planet_culture_workers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = rsrchcap_culture_worker
		modifier_types = {
			add
		}
		trigger = {
			has_job = culture_worker
		}
	}
}

planet_evaluators = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
}

planet_synapse_drones = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
}

planet_nobles = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_merchants = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_entertainers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_soldiers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_priests = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	triggered_produces_modifier = {
		key = rsrchcap_priest
		modifier_types = {
			add
		}
		trigger = {
			OR = {
				has_job = high_priest
				has_job = priest
			}
		}
	}

	triggered_produces_modifier = {
		key = mod_priest
		modifier_types = {
			add
			mult
		}
		trigger = {
			has_job = priest
		}
	}
}

planet_enforcers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_telepaths = {
	parent = planet_enforcers
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_doctors = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_translucers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_chemists = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_artisans = {
	icon = "job_artisan"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        	upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

	triggered_produces_modifier = {
		key = mod_artisan
		modifier_types = {
			add
		}
		trigger = {
			OR = {
				has_job = artisan
				has_job = artisan_drone
			}
		}
	}
}

planet_pops = {
	parent = planets
	generate_mult_modifiers = {
		upkeep
	}

	triggered_upkeep_modifier = {
		key = planet_pops_robotics
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop = yes
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_organics
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop = no
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			add
		}
		trigger = {
			has_job = unemployed
		}
	}
}

unemployment_resources = {
	parent = planet_pops
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		upkeep
		produces
	}
}

pop_category_precursor = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_xeno_ward = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_pre_sapients = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_purge = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_bio_trophy = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_slave = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_robot = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_drones = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_workers = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_specialists = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_rulers = {
	parent = planet_pops
    generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

pop_category_assimilation = {
	parent = planet_pops
	generate_add_modifiers = {
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
}

planet_deposits = {
	parent = planets
}

orbital_mining_deposits = {
	parent = station_gatherers
}

orbital_research_deposits = {
	parent = station_researchers
}

deposit_blockers = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		cost
	}

	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}

armies = {
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}

	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}

leaders = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		cost
		upkeep
	}

	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}

leader_admirals = {
	parent = leaders
    generate_mult_modifiers = {
		cost
		upkeep
	}
}

leader_generals = {
	parent = leaders
    generate_mult_modifiers = {
		cost
		upkeep
	}
}

leader_scientists = {
	parent = leaders
    generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
	}
}

leader_governors = {
	parent = leaders
    generate_mult_modifiers = {
		cost
		upkeep
	}
}

diplomacy = {
	hidden = yes
	parent = country
	generate_mult_modifiers = {
		upkeep
	}
	generate_add_modifiers = {
		produces
	}
}

pop_factions = {
	parent = country
	generate_mult_modifiers = {
		produces
	}

	generate_add_modifiers = {
		produces
	}
}

subjects = {
	parent = diplomacy
}

federation = {
	parent = diplomacy
	generate_add_modifiers = {
		produces
	}
}

rivalries = {
	parent = diplomacy
    generate_mult_modifiers = {
		produces
	}
}

non_aggression_pacts = {
	parent = diplomacy
}

migration_pacts = {
	parent = diplomacy
}

research_agreements = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}
}

commercial_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}
}

defensive_pacts = {
	parent = diplomacy
}

guarantees = {
	parent = diplomacy
}

monthly_trades = {
	generate_add_modifiers = {
		produces
	}
}

claims = {
	use_for_ai_budget = yes
	parent = country
}

subject_tax = {
	parent = diplomacy
}

envoy_costs = {
	parent = diplomacy
}

diplo_closed_borders = {
	parent = diplomacy
}

subject_integration = {
}



relics = {

}

artifact_actions = {

}

sector = {

}